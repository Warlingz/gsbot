var CurScriptIndex = 0;
var LastScript = false;
var Rev = "GSRusher v1.30 ";

var InitLife;
var Corpses = 0;
var done = false;
var _paused = false;

function D2NTStatus(where, time, message) { return SendCopyData('D2NT Manager', null, where << 16 | time, message); }
function NTMain() {
	Delay(1000);

	InitLife = me.hp;

	Include("libs/common/NTCommon.ntl");
	NTC_IncludeLibs();
	NTC_IncludeConfig("GSRusher/rush_configs");
	Include("libs/common/NTExp.ntl");

	NT_LoadConfig();
	NTE_InitializeStats();

	NTSI_LoadNIPFiles("NTBot/item_configs");

	// ubi21 Enigma reset start
	////////////////////////////
	NTU_LogExitStatus("F");

	// ubi21 Enigma reset end
	////////////////////////////

	if (NTConfig_StartDelay > 0) {
		NTC_Delay(NTConfig_StartDelay);
	}

	GetPath(me.areaid, me.x, me.y, me.x, me.y, true);

	SetUIState(0x0A, true);

	if (!NTT_PutBackEnigma()) {
		NTC_Delay(240000);
		ExitGame();
	}

	Corpses = NTT_GetCorpses();
	if (Corpses > 0 || InitLife < 10) {
		NTU_DeathLog(Corpses, InitLife);
	}

	if (!LastScript) {
		NTT_ClearInventory();
		if (!NTT_LookForEnigma()) {
			if (GetUIState(0x01)) {
				SetUIState(0x01, false);
			}
			NTC_Delay(240000);
			ExitGame();
		}

		Load("GSRusher/rush_tools/NTRushTools.ntj");
				
		RegisterEvent(EVENT_GAMEMSG, NT_GameMsgEvents);
		RegisterEvent(EVENT_KEYDOWN, NT_KeyEvents);
		RegisterEvent(EVENT_SCRIPTMSG, NT_ScriptMsgEvents);

		Load("GSRusher/rushbots/" + NTConfig_RushScript[CurScriptIndex] + ".ntj");
		SetStatusText(Rev + " " + NTConfig_RushScript[CurScriptIndex] + ".ntj");

		Include("libs/common/NTSnagit.ntl");
		NTSI_ClearIgnoredItems();

		NTC_LogCurScript(NTConfig_RushScript[CurScriptIndex] + ".ntj");//jinay item log
		
		while (!LastScript) {
			Delay(1000);
		}
	}
	if(LastScript){		
		NT_File("logs/loc/rushbot-gamestatus.txt", 1, "rushover"); // Let the bot know that he needs to switch char.
		NT_File("logs/loc/rushleech-gamestatus.txt", 1, "rushover");
		Delay(1500);
		ExitGame();
	}
}

function NT_GameMsgEvents(msg, type)
{
	var _holdPauseCheck = "";
	var _area = GetArea();
	switch(type){
		case 1:
			if(msg.toLowerCase().indexOf("d2nt") != -1 || msg.toLowerCase().indexOf("error") != -1 || msg.toLowerCase().indexOf("fail") != -1) {
				var date = new Date().toLocaleFormat("<%a, %b %d, %H:%M>");
				var logfile = FileOpen("logs/errorlog/"+me.charname+"-errorlog.txt", 2);
				if(!logfile)
					var logfile = FileOpen("logs/errorlog/"+me.charname+"-errorlog.txt", 1);

				logfile.WriteLine(date + " - " + msg);
				logfile.Close();
			}
			else if(msg.toLowerCase().indexOf("skipped") != -1 ) {
				var date = new Date().toLocaleFormat("<%a, %b %d, %H:%M>");
				var logfile = FileOpen("logs/skiplog/"+me.charname+"-skiplog.txt", 2);
				if(!logfile)
					var logfile = FileOpen("logs/skiplog/"+me.charname+"-skiplog.txt", 1);

				logfile.WriteLine(date + " - " + msg + " ( " + _area.name + " ) ");
				logfile.Close();
			}
			break;
		
		default: break;
	}
}


function NT_KeyEvents(keycode)
{
	var _script;
	switch(keycode) {
	case Do_PauseBot:
		if (!_paused) {
			_script = NTC_FindScript(NTConfig_RushScript[CurScriptIndex] + ".ntj");
			if (_script) {
				if (_script.running) {
					_script.Stop();
					NTC_Delay(300);
					ClickMap(NTC_CLICK_LUP, NTC_SHIFT_NONE, null);
					SetStatusText(COLOR_1 + Rev + "    Paused   " + NTConfig_RushScript[CurScriptIndex] + ".ntj");
					_paused = true;
				}
			}
		} else {
			_paused = false;
			Load("GSRusher/rushbots/" + NTConfig_RushScript[CurScriptIndex] + ".ntj");
			SetStatusText(Rev + " " + NTConfig_RushScript[CurScriptIndex] + ".ntj");
		}
		break;
	case Do_PrevScript:
		if (!_paused) {
			_script = NTC_FindScript(NTConfig_RushScript[CurScriptIndex] + ".ntj");

			if(_script.running) {
				_script.Stop();
				NTC_Delay(300);
				ClickMap(NTC_CLICK_LUP, NTC_SHIFT_NONE, null);
				SetStatusText(COLOR_1 + Rev + "  Paused  " + NTConfig_RushScript[CurScriptIndex] + ".ntj");
				_paused = true;
				break;
			}
		} else {
			_script = NTC_FindScript(NTConfig_RushScript[CurScriptIndex] + ".ntj");

			if (_script.running) {
				_script.Stop();
				NTC_Delay(300);
				ClickMap(NTC_CLICK_LUP, NTC_SHIFT_NONE, null);
				_paused = true;
			}
			if(CurScriptIndex > 0) {
				CurScriptIndex--;
			}
			SetStatusText(COLOR_14 + Rev + " Back to " + NTConfig_RushScript[CurScriptIndex] + ".ntj");
		}
		break;
	case Do_NextScript:			
		if (!_paused) {
			_script = NTC_FindScript(NTConfig_RushScript[CurScriptIndex] + ".ntj");

			if (_script.running) {
				_script.Stop();
				NTC_Delay(300);
				ClickMap(NTC_CLICK_LUP, NTC_SHIFT_NONE, null);
				SetStatusText(COLOR_1 + Rev + "  Paused  " + NTConfig_RushScript[CurScriptIndex] + ".ntj");
				_paused = true;
			}
		} else {
			_script = NTC_FindScript(NTConfig_RushScript[CurScriptIndex] + ".ntj");

			if (_script.running) {
				_script.Stop();
				NTC_Delay(300);
				ClickMap(NTC_CLICK_LUP, NTC_SHIFT_NONE, null);
				_paused = true;
			}
			if(CurScriptIndex < NTConfig_RushScript.length - 1) {
				CurScriptIndex++;
			}
			SetStatusText(COLOR_2 + Rev + " Skip to " + NTConfig_RushScript[CurScriptIndex] + ".ntj");
		}
		break;
		case Do_DropItems:
			NTU_DropItems();
			break;
		case Do_DevTools:
			NTU_DevelopementTools();
			break;
		case Do_CoordLog:
			NTU_LogPrint("logs/testlog/"+me.charname+"-Coords.txt", " New Coord[" + me.x + ", " + me.y + "] " );
			break;
		case Do_HotKeyList:
			Key_HotList();
			break;
		case Do_CursorILvL:
			NTU_CursorILvl();
			break;
		case Do_StatsLog:
			NTU_CheckMyStats();
			break;
		case Do_PrintCoord:
			NTU_CheckCoord();
			break;
		case Do_CheckSpace:
			if(CheckStashSpace)
				NTT_CheckFreeStashSpace(true);
			if(CheckInvSpace)
				NTT_CheckFreeInventorySpace(true);
			break;
		case Do_NipCheck:
			NTU_TLNipCheck();
			break;
		case Do_InvTxtLog:
			NTU_TLInventory();
			break;
		case Do_CheckBPs:
			T_BPsPrint();
			break;
		case Do_ExitGame:
			Print(COLOR_4 + "Calculating stats for game!");
			NTE_ComputeStats(false);
			ExitGame();
			break;
	}
}

function NT_ScriptMsgEvents(msg)
{
	var _area;

	switch(msg)
	{
	case "QuitGame":
		NTC_StopScript(NTConfig_RushScript[CurScriptIndex] + ".ntj");
		NTC_CancelMenus();
		LastScript = true;
		break;
	case "HOSTILE":
		NTC_SendMsgToScript(NTConfig_RushScript[CurScriptIndex] + ".ntj", "pause");
		break;
	case "end":
		if(++CurScriptIndex < NTConfig_RushScript.length)
		{
			NTTM_CheckAct();
			Load("GSRusher/rushbots/" + NTConfig_RushScript[CurScriptIndex] + ".ntj");
			SetStatusText(Rev + "   " + NTConfig_RushScript[CurScriptIndex] + ".ntj");
			NTC_LogCurScript(NTConfig_RushScript[CurScriptIndex] + ".ntj");
		}
		else{
			LastScript = true;
		}
		break;
	default:
		Print(COLOR_1 + NTConfig_RushScript[CurScriptIndex] + " : " + msg + " failed");

		_area = GetArea();

		if(_area)
			NTC_SendLogToOOG(NTC_LOG_COMMON, COLOR_1 + NTConfig_RushScript[CurScriptIndex] + ".ntj" + " : " + msg + " failed (" + _area.name + ")");
		else
			NTC_SendLogToOOG(NTC_LOG_COMMON, COLOR_1 + NTConfig_RushScript[CurScriptIndex] + ".ntj" + " : " + msg + " failed (unknown area)");

		if(++CurScriptIndex < NTConfig_RushScript.length)
		{
			NTTM_CheckAct();
			Load("GSRusher/rushbots/" + NTConfig_RushScript[CurScriptIndex] + ".ntj");
			SetStatusText(Rev + "  "  + NTConfig_RushScript[CurScriptIndex] + ".ntj");
			NTC_LogCurScript(NTConfig_RushScript[CurScriptIndex] + ".ntj");
		}
		else
			LastScript = true;
		break;
	}
}
