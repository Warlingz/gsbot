//Written by goodstuff 8/03/15

//Do Not Edit
var _picker = "";
var Rev = "";
var CurScriptIndex = 0;
var DetectAreaid;
var _area;
function NTMain(){
	Include("libs/common/NTCommon.ntl");
	NTC_IncludeLibs();
	NTC_IncludeConfig("NTBot/char_configs");
	NT_LoadConfig();		
	
	Print(C_ORANGE + "goodstuffs " + C_BROWN + "DClone Killer" + C_ORANGE + " Activated");
	GS_GetAreaInfo();
	
	if(!GS_KillDClone()){
		NTTM_CheckAct();
		Delay(500);
		NTTMGR_TownManager();
		NTTM_TownMove("waypoint");
		
		switch(NTConfig_SpawnArea){
			case 0 ://cold plains Bishibosh
				NTM_TakeWaypoint(3);
				NTP_DoPrecast(true, true);			
				if(!NTM_MoveToPresetUnit(3, NTC_UNIT_MONSTER, 734, 10, -10)){
					return;
				}
				if(!GS_KillDClone()){
					GS_SearchForClone(DetectAreaid);
				}
				break;
			case 1 ://stony field Rakanishu
				NTM_TakeWaypoint(4);
				NTP_DoPrecast(true, true);			
				if(!NTM_MoveToPresetUnit(4, NTC_UNIT_MONSTER, 737, 10, -10)){
					return;
				}
				if(!GS_KillDClone()){
					GS_SearchForClone(DetectAreaid);
				}
				break;
			case 2 ://cathedral Bone Ash
				NTM_TakeWaypoint(32);
				NTP_DoPrecast(true, true);
				if(!NTM_MoveToPresetUnit(33, NTC_UNIT_MONSTER, 743, 10, -10)){
					return;
				}
				if(!GS_KillDClone()){
					GS_SearchForClone(DetectAreaid);
				}
				break;
			case 3 ://far oasis Beetleburst
				NTM_TakeWaypoint(43);
				NTP_DoPrecast(true, true);			
				if(!NTM_MoveToPresetUnit(43, NTC_UNIT_MONSTER, 747, 10, -10)){
					return;
				}
				if(!GS_KillDClone()){
					GS_SearchForClone(DetectAreaid);
				}
				break;
			case 4 ://palace cellar Fire Eye
				NTM_TakeWaypoint(74);
				NTP_DoPrecast(true, true);
				var _portal = NTM_TakeUnit(NTC_UNIT_OBJECT, 298);			
				if(_portal){
					if(!GS_KillDClone()){
						GS_SearchForClone(DetectAreaid);
					}
				}
				break;
			default : //if for some reason the spawn type was set wrong, we will go to Rakanishu
				NTM_TakeWaypoint(4); 
				NTP_DoPrecast(true, true);			
				if(!NTM_MoveToPresetUnit(4, NTC_UNIT_MONSTER, 737, 10, -10)){
					return;
				}
				if(!GS_KillDClone()){
					GS_SearchForClone(DetectAreaid);
				}
				break;
		}
	}
	
	GS_ScriptRev();
	
	if(CurScriptIndex == "" || CurScriptIndex == " ")
		CurScriptIndex = 0;
	Load("NTBot/bots/" + NTConfig_Script[CurScriptIndex]);
	SetStatusText(Rev + " " + NTConfig_Script[CurScriptIndex]);
}
function GS_KillDClone()
{
	var _result = false;
	
	if(NTA_KillMonster(333)){
		GS_SendInfo(3);
		if(NTConfig_DCloneHandler == 0){
			Delay(100);		
			NTSI_PickItems(); 
			NTA_ClearPosition(15);
			NTM_MakeTP(true);	
		}
		else if(NTConfig_DCloneHandler > 0){
			_picker = NT_File("logs/AnniLog/AnniPicker.txt", 0);
			NTM_MakeTP();	
			NTA_ClearPosition(30);
			Delay(100);
			NT_File("logs/AnniLog/AnniOwner.txt", 1, me.gamename + "/" + me.gamepassword);
			NT_File("logs/AnniLog/Annilog.txt", 1, "anniup");
			NT_File("logs/AnniLog/AnniOwnerName.txt", 1, me.charname);
			GS_FindPicker();
			NTA_ClearPosition(30);
			GS_WaitFor(_picker);
			NTSI_PickItems();
			NTTM_CheckAct();
		}
		_result = true;
	}	
	return _result;
}
function GS_FindPicker() {
	var count = 0;
	var _unit;
	var found = false;
	
	do{
		if(_picker == ""){			
			_picker = NT_File("logs/AnniLog/AnniPicker.txt", 0);
		}
        NTC_Delay(2000);
		_unit = GetPlayerUnit();
		do {
		  if (_unit.name == _picker)
		  {
			found = true;
			break;
		  }
		} while (_unit.GetNext());
		count ++;
		if(count == 10 || count == 20 || count == 30 || count == 50 || count == 70 || count == 100 || count == 130 || count == 160 || count == 200 || count == 220 || count == 240 || count == 260 || count == 280 || count == 300){			
			NT_File("logs/AnniLog/AnniOwner.txt", 1, me.gamename + "/" + me.gamepassword);	
			NT_File("logs/AnniLog/Annilog.txt", 1, "anniup");
			NT_File("logs/AnniLog/AnniOwnerName.txt", 1, me.charname);
		}
	} while ((!found) && (count < 300));	
	
	if (found) {
		Print(COLOR_8 + "Anni Picker found");
		return found;
	}
	
}
function GS_WaitFor(name)
{
	var paused = true;
	var count = 0;
	var unit = GetPlayerUnit();
	do{
		do{
			if(unit.name == name){
				while(unit.areaid != me.areaid){
					count++;
					Delay(1000);
					if(unit.areaid == me.areaid){
						paused = false;
						break;
					}
					if(count > 139){
						paused = false;
						break;
					}
				}
			}
		}while(unit.GetNext());
	}while(paused && count < 140);
}
function GS_ScriptRev() {
	var grabLine;
	var grabInfo = FileOpen("logs/AnniLog/" + me.account + "-utility.txt", 0);
	if(!grabInfo){
		var grabInfo = FileOpen("logs/AnniLog/" + me.account + "-utility.txt", 1);
	}
	if(grabInfo){ 
		grabLine = grabInfo.ReadLine();
		Rev = grabLine.substring(0, grabLine.indexOf('/'));
		CurScriptIndex = grabLine.substring(grabLine.indexOf('/') + 1, grabLine.length);
		grabInfo.Close();	
	}
	return;
}
function GS_SearchForClone(areaid)
{	
	Print(C_ORANGE + "Searching for DClone");
	GS_SendInfo(0);
	var dClone, _result = false;
	NTTM_CheckAct();
	NTTM_TownMove("waypoint");
	switch(areaid)
	{
		case 1:
		case 40:
		case 75:
		case 109:
		break;
		case 83 :
			var _waypoint;
			var _deltax, _deltay;
			NTM_TakeWaypoint(83);
			NTP_DoPrecast(true, true);
			_waypoint = NTC_FindUnit(NTC_UNIT_OBJECT, GetLocaleString(22526), 5);
			if(!_waypoint){
				NTC_SendMsgToScript("NTBotGame.ntj", "NTC_FindUnit()");
				return;
			}
			_deltax = _waypoint.x - 5699;
			_deltay = _waypoint.y - 1584;
			if(!NTM_MoveTo(me.areaid, 5800+_deltax, 1515+_deltay)){
				NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveTo()");
				return;
			}
			_result = true;
		break;
		case 102 :
			NTM_TakeWaypoint(101);
			NTP_DoPrecast(true, true);
			if(!NTM_MoveToStair(me.areaid, 102)){
				NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToStair()");
				return;
			}
			if(!NTM_TakeStair(102)){
				NTC_SendMsgToScript("NTBotGame.ntj", "NTM_TakeStair()");
				return;
			}
			if(!NTM_MoveTo(me.areaid, 17564, 8069)){
				NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveTo()");
				return;
			}
			_result = true;
		break;
		case 110 :
			NTM_TakeWaypoint(111);
			NTP_DoPrecast(true, true);
			if(!NTM_MoveTo(110, me.x+79, me.y+16)){
				NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveTo()");
				return;
			}
			if(!NTM_MoveToPresetUnit(me.areaid, NTC_UNIT_MONSTER, 776, -5, 5)) {
				return;
			}
			_result = true;
		break;
		case 111 :
			NTM_TakeWaypoint(111);
			NTP_DoPrecast(true, true);			
			if(!NTM_MoveTo(me.areaid, 3750, 5090)){
				NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveTo()");
				return;
			}
			_result = true;
		break;
		case 112 :
			NTM_TakeWaypoint(112);
			NTP_DoPrecast(true, true);			
			if(!NTM_MoveToStair(me.areaid, 113)){
				NTC_SendMsgToScript("NTBotGame.ntj", "NTM_MoveToStair()");
				return;
			}
			_result = true;
		break;
		default :GS_SendInfo(2);
		break;
	}
	if(!GS_KillDClone()){
		Print(COLOR_8 + "No Luck..");
		if(_result)
			GS_SendInfo(1);
	}

}

var m_vdata = "";
function GS_GetNearByMonsters() {
	var _monster;
	var _counter = [];
	var mobs = [];
	var m_sdata = "";
	var moblist = [];
	
	_monster = NTC_FindUnit(NTC_UNIT_MONSTER);
	if(_monster){
		do {
			switch(_monster.classid) {
				case 333 : AddMonster(COLOR_1 + _monster.name + COLOR_0);
					break;
				default: AddMonster(COLOR_4 + _monster.name + COLOR_0);
					break;
			}
		} while(_monster.GetNext())
	}	
	for(var i = 0 ; i < mobs.length ; i++){
		moblist.push(mobs[i] + " (" +_counter[i] + ")\n");
	}
	m_sdata = moblist.toString();	
	m_vdata = m_sdata.replace(",", "");	
	for(var i = 0; i < mobs.length ; i++){
		m_vdata = m_vdata.replace(",", "");
	}
	function AddMonster(unit) {
		var m_List = mobs.indexOf(unit);
		if(m_List == -1 && unit.indexOf("an evil force") == -1){
			mobs.push(unit);
			_counter.push(1);
		}
		else{			
			_counter[m_List]++;
		}
	}
}
function GS_GetAreaInfo()
{	
	_area = GetArea();
	DetectAreaid = me.areaid;
	GS_GetNearByMonsters();	
	NTC_SendLogToOOG(NTC_LOG_COMMON, COLOR_5 + "DClone Detected : " + COLOR_3 + "[Moving to SpawnArea]".split("\n")[0] + ";" + 
		COLOR_4 + "-------------------------------------\n" + 
		COLOR_4 + "DClone Detected\nMy Area : [" + COLOR_2 +_area.name + COLOR_4 + "]\n" +
		COLOR_4 + "Detect Area ID : " + COLOR_9 + DetectAreaid + "\n" +
		COLOR_4 + "Spawn Area : " + COLOR_9 + spawnTypeToString() + "\n" +
		COLOR_4 + "[Nearby Monsters]" + "\n" +
		COLOR_4 + m_vdata +
		COLOR_4 + "---------------------------------------");
}
function GS_SendInfo(type)
{
	var area = GetArea();
	m_vdata = "";
	GS_GetNearByMonsters();
	switch(type){
		case 0:
			NTC_SendLogToOOG(NTC_LOG_COMMON, COLOR_8 + "SpawnArea Failed :" + COLOR_5 + " [Searching for DClone] ".split("\n")[0] + ";" + 
				COLOR_4 + "-------------------------------------\n" + 
				COLOR_1 + "Failed to Spawn DClone\n" + 
				COLOR_4 + "Area : " + COLOR_2 + area.name + "\n" +
				COLOR_4 + "Area ID : " + COLOR_2 + me.areaid + "\n" +
				COLOR_4 + "Detect Area ID : " + COLOR_9 + DetectAreaid + "\n" +
				COLOR_4 + "Spawn Area : " + COLOR_9 + spawnTypeToString() + "\n" +
				COLOR_4 + "[Nearby Monsters]\n" +
				COLOR_4 + m_vdata +
				COLOR_4 + "---------------------------------------");
		break;
		case 1:
			NTC_SendLogToOOG(NTC_LOG_COMMON, COLOR_1 + "Search For DClone Failed : My Area [" + COLOR_5 + area.name + COLOR_1 + "] ".split("\n")[0] + ";" + 
				COLOR_4 + "-------------------------------------\n" + 
				COLOR_1 + "Search For DClone Failed\n" + 
				COLOR_4 + "Area : " + COLOR_2 + area.name + "\n" +
				COLOR_4 + "Area ID : " + COLOR_2 + me.areaid + "\n" +
				COLOR_4 + "Detect Area ID : " + COLOR_9 + DetectAreaid + "\n" +
				COLOR_4 + "Spawn Area : " + COLOR_9 + spawnTypeToString() + "\n" +
				COLOR_4 + "[Nearby Monsters]\n" +
				COLOR_4 + m_vdata +
				COLOR_4 + "---------------------------------------");
		break;
		case 2:
			NTC_SendLogToOOG(NTC_LOG_COMMON, COLOR_1 + "Couldn't Search for DClone : Area[" + COLOR_5 + _area.name + COLOR_1 + "] ".split("\n")[0] + ";" + 
				COLOR_4 + "-----------------------------------------\n" + 
				COLOR_1 + "Search For DClone Failed\n" + 
				COLOR_4 + "Detect Area ID : " + COLOR_9 + DetectAreaid + "\n" +
				COLOR_9 + "If this Area has A Super Unique Monster\nPost it in goodstuffs thread\nArea Name : [" + COLOR_2 + _area.name + COLOR_9 + "]\n" +
				COLOR_4 + "-----------------------------------------------");
		break;
		case 3:
			NTC_SendLogToOOG(NTC_LOG_COMMON, COLOR_4 + "Slayed Diablo Clone".split("\n")[0] + ";" + 
				COLOR_4 + "-------------------------------------\n" + 
				COLOR_4 + "Slayed DClone Successfully\n" +
				COLOR_4 + "Area : " + COLOR_2 + area.name + "\n" +
				COLOR_4 + "Area ID : " + COLOR_2 + me.areaid + "\n" +
				COLOR_4 + "Spawn Area : " + COLOR_9 + spawnTypeToString() + "\n" +
				COLOR_4 + "[Nearby Monsters]\n" +
				COLOR_4 + m_vdata +
				COLOR_4 + "---------------------------------------");
		break;
	}
}
function spawnTypeToString()
{
	var str;
	switch(NTConfig_SpawnArea)
	{
		case 0 : str = "Cold Plains - Bishibosh"; break;
		case 1 : str = "Stony Field - Rakanishu"; break;
		case 2 : str = "Cathedral - Bone Ash"; break;
		case 3 : str = "Far Oasis - Beetleburst"; break;
		case 4 : str = "Palace Cellar - Fire Eye"; break;
		default : str = "Stony Field - Rakanishu"; break;
	}
	return str;
}